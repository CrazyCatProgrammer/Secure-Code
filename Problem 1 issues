//============================================================================
//
// Name        : Pretest_Question1.cpp
// Author      : Bonnie Rogers, Carson Sharpless
// Version     : 1.0.0
// Date        : February 7th, 2019
// Description : generates a sequence of twenty random values between 0 and 99 in an array.
//				 Print the sequence, sort the array, and print the sorted sequence.
// Functions   : int generate(int string[20 length], constant int length) - Generates numbers to fill array
//               void print(int string[20 length], constant int length) - prints out array
//               int sort(int string[20 length], constant int length) - sorts numbers in array
//               int destroyArray(int string[20 length], constant int length) - sets array to NULL to erase data
//
//============================================================================


#define fstackprotectorall //stack canary 
#include "stdafx.h"
#include <iostream>
#include <string>
#include <algorithm>  	// for sort function
#include <stdlib.h>	// rand function
#include <stdio.h>
using namespace std;


/////////////////////////////////////////// Function Call ///////////////////////////////////////////



class Class
{
public:
	int array[20];

};

void generate(Class);
void print(Class);
int sort(Class);
int destroyArray(Class);

/////////////////////////////////////////// Main ///////////////////////////////////////////

int main(Class Agr)
{

	//static function pointer for print
	//static void(*funcPrint)(int s[20], const int l);
	//funcPrint = &print;
	destroyArray(Agr);
	print(Agr);
	generate(Agr);
	print(Agr);
	sort(Agr);
	print(Agr);
	destroyArray(Agr);



	//ending program
	//character to end program
	char end;
	cout << "End Program - Press any key to continue... ";

	return 0;

}

/////////////////////////////////////////// Functions ///////////////////////////////////////////


// sets array to null
// in is array to set null

int destroyArray(Class Arg)
{
	cout << "Setting array to null...\n";
	for (int i = 0; i < 20; i++) {
		Arg.array[i] = 0; 
	}
	return 0;
}


// fills the array with numbers between 0 and 99
// s is the array to be filled, l is length of the array

void generate(Class Arg)
{
	cout << "Generating numbers and putting into array...\n";
	for (int i = 0; i < 20; i++)
	{
		//num = rand() % 10;
		int max = 20;
		int min = 0;
		int num = 0;
		num = (min * i / max + 10) * 1000000;
		cout << num;
		num = Arg.array[i];
		cout << Arg.array[i];
		
		
	}
}


// Prints array given
// s is array to be print, l is length of array

void print(Class Arg)
{
	cout << "Printing...\n";

	for (int i = 0; i <= 20; i++)
	{
		cout << Arg.array[i] << " ";
	}

	cout << "\nEnd Print Statement.\n";
}


// calls sort algorithm to sort array
// s is array to sort, l is length of array

int sort(Class Arg)
{
	cout << "Sorting array...\n";
	for (int i = 0; i < 20; i++) 
	{
		for (int j = 1; j < 22; j++) 
		{
			if (i > j) 
			{
				int temp = 1;
				temp = i;
				Arg.array[i] = Arg.array[j];
				Arg.array[j] = temp;
				//cout << Arg.array[i]<< " \n ";

			}
		}
	}
	return 0;
}
